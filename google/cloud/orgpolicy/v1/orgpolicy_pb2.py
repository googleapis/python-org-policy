# -*- coding: utf-8 -*-

# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/orgpolicy_v1/proto/orgpolicy.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
    name="google/cloud/orgpolicy_v1/proto/orgpolicy.proto",
    package="google.cloud.orgpolicy.v1",
    syntax="proto3",
    serialized_options=b"\n\035com.google.cloud.orgpolicy.v1B\016OrgPolicyProtoP\001ZBgoogle.golang.org/genproto/googleapis/cloud/orgpolicy/v1;orgpolicy\252\002\031Google.Cloud.OrgPolicy.V1\312\002\031Google\\Cloud\\OrgPolicy\\V1\352\002\034Google::Cloud::OrgPolicy::V1",
    serialized_pb=b'\n/google/cloud/orgpolicy_v1/proto/orgpolicy.proto\x12\x19google.cloud.orgpolicy.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto"\x8b\x05\n\x06Policy\x12\x0f\n\x07version\x18\x01 \x01(\x05\x12\x12\n\nconstraint\x18\x02 \x01(\t\x12\x0c\n\x04\x65tag\x18\x03 \x01(\x0c\x12/\n\x0bupdate_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x43\n\x0blist_policy\x18\x05 \x01(\x0b\x32,.google.cloud.orgpolicy.v1.Policy.ListPolicyH\x00\x12I\n\x0e\x62oolean_policy\x18\x06 \x01(\x0b\x32/.google.cloud.orgpolicy.v1.Policy.BooleanPolicyH\x00\x12K\n\x0frestore_default\x18\x07 \x01(\x0b\x32\x30.google.cloud.orgpolicy.v1.Policy.RestoreDefaultH\x00\x1a\xfb\x01\n\nListPolicy\x12\x16\n\x0e\x61llowed_values\x18\x01 \x03(\t\x12\x15\n\rdenied_values\x18\x02 \x03(\t\x12J\n\nall_values\x18\x03 \x01(\x0e\x32\x36.google.cloud.orgpolicy.v1.Policy.ListPolicy.AllValues\x12\x17\n\x0fsuggested_value\x18\x04 \x01(\t\x12\x1b\n\x13inherit_from_parent\x18\x05 \x01(\x08"<\n\tAllValues\x12\x1a\n\x16\x41LL_VALUES_UNSPECIFIED\x10\x00\x12\t\n\x05\x41LLOW\x10\x01\x12\x08\n\x04\x44\x45NY\x10\x02\x1a!\n\rBooleanPolicy\x12\x10\n\x08\x65nforced\x18\x01 \x01(\x08\x1a\x10\n\x0eRestoreDefaultB\r\n\x0bpolicy_typeB\xcc\x01\n\x1d\x63om.google.cloud.orgpolicy.v1B\x0eOrgPolicyProtoP\x01ZBgoogle.golang.org/genproto/googleapis/cloud/orgpolicy/v1;orgpolicy\xaa\x02\x19Google.Cloud.OrgPolicy.V1\xca\x02\x19Google\\Cloud\\OrgPolicy\\V1\xea\x02\x1cGoogle::Cloud::OrgPolicy::V1b\x06proto3',
    dependencies=[
        google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,
        google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,
        google_dot_api_dot_annotations__pb2.DESCRIPTOR,
    ],
)


_POLICY_LISTPOLICY_ALLVALUES = _descriptor.EnumDescriptor(
    name="AllValues",
    full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy.AllValues",
    filename=None,
    file=DESCRIPTOR,
    values=[
        _descriptor.EnumValueDescriptor(
            name="ALL_VALUES_UNSPECIFIED",
            index=0,
            number=0,
            serialized_options=None,
            type=None,
        ),
        _descriptor.EnumValueDescriptor(
            name="ALLOW", index=1, number=1, serialized_options=None, type=None
        ),
        _descriptor.EnumValueDescriptor(
            name="DENY", index=2, number=2, serialized_options=None, type=None
        ),
    ],
    containing_type=None,
    serialized_options=None,
    serialized_start=694,
    serialized_end=754,
)
_sym_db.RegisterEnumDescriptor(_POLICY_LISTPOLICY_ALLVALUES)


_POLICY_LISTPOLICY = _descriptor.Descriptor(
    name="ListPolicy",
    full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="allowed_values",
            full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy.allowed_values",
            index=0,
            number=1,
            type=9,
            cpp_type=9,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="denied_values",
            full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy.denied_values",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=3,
            has_default_value=False,
            default_value=[],
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="all_values",
            full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy.all_values",
            index=2,
            number=3,
            type=14,
            cpp_type=8,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="suggested_value",
            full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy.suggested_value",
            index=3,
            number=4,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="inherit_from_parent",
            full_name="google.cloud.orgpolicy.v1.Policy.ListPolicy.inherit_from_parent",
            index=4,
            number=5,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[],
    enum_types=[_POLICY_LISTPOLICY_ALLVALUES],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=503,
    serialized_end=754,
)

_POLICY_BOOLEANPOLICY = _descriptor.Descriptor(
    name="BooleanPolicy",
    full_name="google.cloud.orgpolicy.v1.Policy.BooleanPolicy",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="enforced",
            full_name="google.cloud.orgpolicy.v1.Policy.BooleanPolicy.enforced",
            index=0,
            number=1,
            type=8,
            cpp_type=7,
            label=1,
            has_default_value=False,
            default_value=False,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        )
    ],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=756,
    serialized_end=789,
)

_POLICY_RESTOREDEFAULT = _descriptor.Descriptor(
    name="RestoreDefault",
    full_name="google.cloud.orgpolicy.v1.Policy.RestoreDefault",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[],
    extensions=[],
    nested_types=[],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[],
    serialized_start=791,
    serialized_end=807,
)

_POLICY = _descriptor.Descriptor(
    name="Policy",
    full_name="google.cloud.orgpolicy.v1.Policy",
    filename=None,
    file=DESCRIPTOR,
    containing_type=None,
    fields=[
        _descriptor.FieldDescriptor(
            name="version",
            full_name="google.cloud.orgpolicy.v1.Policy.version",
            index=0,
            number=1,
            type=5,
            cpp_type=1,
            label=1,
            has_default_value=False,
            default_value=0,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="constraint",
            full_name="google.cloud.orgpolicy.v1.Policy.constraint",
            index=1,
            number=2,
            type=9,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"".decode("utf-8"),
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="etag",
            full_name="google.cloud.orgpolicy.v1.Policy.etag",
            index=2,
            number=3,
            type=12,
            cpp_type=9,
            label=1,
            has_default_value=False,
            default_value=b"",
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="update_time",
            full_name="google.cloud.orgpolicy.v1.Policy.update_time",
            index=3,
            number=4,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="list_policy",
            full_name="google.cloud.orgpolicy.v1.Policy.list_policy",
            index=4,
            number=5,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="boolean_policy",
            full_name="google.cloud.orgpolicy.v1.Policy.boolean_policy",
            index=5,
            number=6,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
        _descriptor.FieldDescriptor(
            name="restore_default",
            full_name="google.cloud.orgpolicy.v1.Policy.restore_default",
            index=6,
            number=7,
            type=11,
            cpp_type=10,
            label=1,
            has_default_value=False,
            default_value=None,
            message_type=None,
            enum_type=None,
            containing_type=None,
            is_extension=False,
            extension_scope=None,
            serialized_options=None,
            file=DESCRIPTOR,
        ),
    ],
    extensions=[],
    nested_types=[_POLICY_LISTPOLICY, _POLICY_BOOLEANPOLICY, _POLICY_RESTOREDEFAULT],
    enum_types=[],
    serialized_options=None,
    is_extendable=False,
    syntax="proto3",
    extension_ranges=[],
    oneofs=[
        _descriptor.OneofDescriptor(
            name="policy_type",
            full_name="google.cloud.orgpolicy.v1.Policy.policy_type",
            index=0,
            containing_type=None,
            fields=[],
        )
    ],
    serialized_start=171,
    serialized_end=822,
)

_POLICY_LISTPOLICY.fields_by_name["all_values"].enum_type = _POLICY_LISTPOLICY_ALLVALUES
_POLICY_LISTPOLICY.containing_type = _POLICY
_POLICY_LISTPOLICY_ALLVALUES.containing_type = _POLICY_LISTPOLICY
_POLICY_BOOLEANPOLICY.containing_type = _POLICY
_POLICY_RESTOREDEFAULT.containing_type = _POLICY
_POLICY.fields_by_name[
    "update_time"
].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_POLICY.fields_by_name["list_policy"].message_type = _POLICY_LISTPOLICY
_POLICY.fields_by_name["boolean_policy"].message_type = _POLICY_BOOLEANPOLICY
_POLICY.fields_by_name["restore_default"].message_type = _POLICY_RESTOREDEFAULT
_POLICY.oneofs_by_name["policy_type"].fields.append(
    _POLICY.fields_by_name["list_policy"]
)
_POLICY.fields_by_name["list_policy"].containing_oneof = _POLICY.oneofs_by_name[
    "policy_type"
]
_POLICY.oneofs_by_name["policy_type"].fields.append(
    _POLICY.fields_by_name["boolean_policy"]
)
_POLICY.fields_by_name["boolean_policy"].containing_oneof = _POLICY.oneofs_by_name[
    "policy_type"
]
_POLICY.oneofs_by_name["policy_type"].fields.append(
    _POLICY.fields_by_name["restore_default"]
)
_POLICY.fields_by_name["restore_default"].containing_oneof = _POLICY.oneofs_by_name[
    "policy_type"
]
DESCRIPTOR.message_types_by_name["Policy"] = _POLICY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Policy = _reflection.GeneratedProtocolMessageType(
    "Policy",
    (_message.Message,),
    {
        "ListPolicy": _reflection.GeneratedProtocolMessageType(
            "ListPolicy",
            (_message.Message,),
            {
                "DESCRIPTOR": _POLICY_LISTPOLICY,
                "__module__": "google.cloud.orgpolicy_v1.proto.orgpolicy_pb2",
                "__doc__": """Used in ``policy_type`` to specify how ``list_policy`` behaves at this
    resource.
    
    ``ListPolicy`` can define specific values and subtrees of Cloud Resource
    Manager resource hierarchy (``Organizations``, ``Folders``,
    ``Projects``) that are allowed or denied by setting the
    ``allowed_values`` and ``denied_values`` fields. This is achieved by
    using the ``under:`` and optional ``is:`` prefixes. The ``under:``
    prefix is used to denote resource subtree values. The ``is:`` prefix is
    used to denote specific values, and is required only if the value
    contains a “:”. Values prefixed with “is:” are treated the same as
    values with no prefix. Ancestry subtrees must be in one of the following
    formats: - “projects/”, e.g. “projects/tokyo-rain-123” - “folders/”,
    e.g. “folders/1234” - “organizations/”, e.g. “organizations/1234” The
    ``supports_under`` field of the associated ``Constraint`` defines
    whether ancestry prefixes can be used. You can set ``allowed_values``
    and ``denied_values`` in the same ``Policy`` if ``all_values`` is
    ``ALL_VALUES_UNSPECIFIED``. ``ALLOW`` or ``DENY`` are used to allow or
    deny all values. If ``all_values`` is set to either ``ALLOW`` or
    ``DENY``, ``allowed_values`` and ``denied_values`` must be unset.
    
    
    Attributes:
        allowed_values:
            List of values allowed at this resource. Can only be set if
            ``all_values`` is set to ``ALL_VALUES_UNSPECIFIED``.
        denied_values:
            List of values denied at this resource. Can only be set if
            ``all_values`` is set to ``ALL_VALUES_UNSPECIFIED``.
        all_values:
            The policy all_values state.
        suggested_value:
            Optional. The Google Cloud Console will try to default to a
            configuration that matches the value specified in this
            ``Policy``. If ``suggested_value`` is not set, it will inherit
            the value specified higher in the hierarchy, unless
            ``inherit_from_parent`` is ``false``.
        inherit_from_parent:
            Determines the inheritance behavior for this ``Policy``.  By
            default, a ``ListPolicy`` set at a resource supercedes any
            ``Policy`` set anywhere up the resource hierarchy. However, if
            ``inherit_from_parent`` is set to ``true``, then the values
            from the effective ``Policy`` of the parent resource are
            inherited, meaning the values set in this ``Policy`` are added
            to the values inherited up the hierarchy.  Setting ``Policy``
            hierarchies that inherit both allowed values and denied values
            isn’t recommended in most circumstances to keep the
            configuration simple and understandable. However, it is
            possible to set a ``Policy`` with ``allowed_values`` set that
            inherits a ``Policy`` with ``denied_values`` set. In this
            case, the values that are allowed must be in
            ``allowed_values`` and not present in ``denied_values``.  For
            example, suppose you have a ``Constraint``
            ``constraints/serviceuser.services``, which has a
            ``constraint_type`` of ``list_constraint``, and with
            ``constraint_default`` set to ``ALLOW``. Suppose that at the
            Organization level, a ``Policy`` is applied that restricts the
            allowed API activations to {``E1``, ``E2``}. Then, if a
            ``Policy`` is applied to a project below the Organization that
            has ``inherit_from_parent`` set to ``false`` and field
            all_values set to DENY, then an attempt to activate any API
            will be denied.  The following examples demonstrate different
            possible layerings for ``projects/bar`` parented by
            ``organizations/foo``:  Example 1 (no inherited values):
            ``organizations/foo`` has a ``Policy`` with values:
            {allowed_values: “E1” allowed_values:“E2”} ``projects/bar``
            has ``inherit_from_parent`` ``false`` and values:
            {allowed_values: “E3” allowed_values: “E4”} The accepted
            values at ``organizations/foo`` are ``E1``, ``E2``. The
            accepted values at ``projects/bar`` are ``E3``, and ``E4``.
            Example 2 (inherited values): ``organizations/foo`` has a
            ``Policy`` with values: {allowed_values: “E1”
            allowed_values:“E2”} ``projects/bar`` has a ``Policy`` with
            values: {value: “E3” value: “E4” inherit_from_parent: true}
            The accepted values at ``organizations/foo`` are ``E1``,
            ``E2``. The accepted values at ``projects/bar`` are ``E1``,
            ``E2``, ``E3``, and ``E4``.  Example 3 (inheriting both
            allowed and denied values): ``organizations/foo`` has a
            ``Policy`` with values: {allowed_values: “E1” allowed_values:
            “E2”} ``projects/bar`` has a ``Policy`` with: {denied_values:
            “E1”} The accepted values at ``organizations/foo`` are ``E1``,
            ``E2``. The value accepted at ``projects/bar`` is ``E2``.
            Example 4 (RestoreDefault): ``organizations/foo`` has a
            ``Policy`` with values: {allowed_values: “E1”
            allowed_values:“E2”} ``projects/bar`` has a ``Policy`` with
            values: {RestoreDefault: {}} The accepted values at
            ``organizations/foo`` are ``E1``, ``E2``. The accepted values
            at ``projects/bar`` are either all or none depending on the
            value of ``constraint_default`` (if ``ALLOW``, all; if
            ``DENY``, none).  Example 5 (no policy inherits parent
            policy): ``organizations/foo`` has no ``Policy`` set.
            ``projects/bar`` has no ``Policy`` set. The accepted values at
            both levels are either all or none depending on the value of
            ``constraint_default`` (if ``ALLOW``, all; if ``DENY``, none).
            Example 6 (ListConstraint allowing all): ``organizations/foo``
            has a ``Policy`` with values: {allowed_values: “E1”
            allowed_values: “E2”} ``projects/bar`` has a ``Policy`` with:
            {all: ALLOW} The accepted values at ``organizations/foo`` are
            ``E1``, E2\ ``. Any value is accepted at``\ projects/bar`.
            Example 7 (ListConstraint allowing none):
            ``organizations/foo`` has a ``Policy`` with values:
            {allowed_values: “E1” allowed_values: “E2”} ``projects/bar``
            has a ``Policy`` with: {all: DENY} The accepted values at
            ``organizations/foo`` are ``E1``, E2\ ``. No value is accepted
            at``\ projects/bar`.  Example 10 (allowed and denied subtrees
            of Resource Manager hierarchy): Given the following resource
            hierarchy O1->{F1, F2}; F1->{P1}; F2->{P2, P3},
            ``organizations/foo`` has a ``Policy`` with values:
            {allowed_values: “under:organizations/O1”} ``projects/bar``
            has a ``Policy`` with: {allowed_values: “under:projects/P3”}
            {denied_values: “under:folders/F2”} The accepted values at
            ``organizations/foo`` are ``organizations/O1``,
            ``folders/F1``, ``folders/F2``, ``projects/P1``,
            ``projects/P2``, ``projects/P3``. The accepted values at
            ``projects/bar`` are ``organizations/O1``, ``folders/F1``,
            ``projects/P1``.
    """,
                # @@protoc_insertion_point(class_scope:google.cloud.orgpolicy.v1.Policy.ListPolicy)
            },
        ),
        "BooleanPolicy": _reflection.GeneratedProtocolMessageType(
            "BooleanPolicy",
            (_message.Message,),
            {
                "DESCRIPTOR": _POLICY_BOOLEANPOLICY,
                "__module__": "google.cloud.orgpolicy_v1.proto.orgpolicy_pb2",
                "__doc__": """Used in ``policy_type`` to specify how ``boolean_policy``
    will behave at this resource.
    
    
    Attributes:
        enforced:
            If ``true``, then the ``Policy`` is enforced. If ``false``,
            then any configuration is acceptable.  Suppose you have a
            ``Constraint`` ``constraints/compute.disableSerialPortAccess``
            with ``constraint_default`` set to ``ALLOW``. A ``Policy`` for
            that ``Constraint`` exhibits the following behavior: - If the
            ``Policy`` at this resource has enforced set to ``false``,
            serial port connection attempts will be allowed. - If the
            ``Policy`` at this resource has enforced set to ``true``,
            serial port connection attempts will be refused. - If the
            ``Policy`` at this resource is ``RestoreDefault``, serial port
            connection attempts will be allowed. - If no ``Policy`` is set
            at this resource or anywhere higher in the resource hierarchy,
            serial port connection attempts will be allowed. - If no
            ``Policy`` is set at this resource, but one exists higher in
            the resource hierarchy, the behavior is as if the\ ``Policy``
            were set at this resource.  The following examples demonstrate
            the different possible layerings:  Example 1 (nearest
            ``Constraint`` wins): ``organizations/foo`` has a ``Policy``
            with: {enforced: false} ``projects/bar`` has no ``Policy``
            set. The constraint at ``projects/bar`` and
            ``organizations/foo`` will not be enforced.  Example 2
            (enforcement gets replaced): ``organizations/foo`` has a
            ``Policy`` with: {enforced: false} ``projects/bar`` has a
            ``Policy`` with: {enforced: true} The constraint at
            ``organizations/foo`` is not enforced. The constraint at
            ``projects/bar`` is enforced.  Example 3 (RestoreDefault):
            ``organizations/foo`` has a ``Policy`` with: {enforced: true}
            ``projects/bar`` has a ``Policy`` with: {RestoreDefault: {}}
            The constraint at ``organizations/foo`` is enforced. The
            constraint at ``projects/bar`` is not enforced, because
            ``constraint_default`` for the ``Constraint`` is ``ALLOW``.
    """,
                # @@protoc_insertion_point(class_scope:google.cloud.orgpolicy.v1.Policy.BooleanPolicy)
            },
        ),
        "RestoreDefault": _reflection.GeneratedProtocolMessageType(
            "RestoreDefault",
            (_message.Message,),
            {
                "DESCRIPTOR": _POLICY_RESTOREDEFAULT,
                "__module__": "google.cloud.orgpolicy_v1.proto.orgpolicy_pb2",
                "__doc__": """Ignores policies set above this resource and restores the
    ``constraint_default`` enforcement behavior of the specific
    ``Constraint`` at this resource.
    
    Suppose that ``constraint_default`` is set to ``ALLOW`` for the
    ``Constraint`` ``constraints/serviceuser.services``. Suppose that
    organization foo.com sets a ``Policy`` at their Organization resource
    node that restricts the allowed service activations to deny all service
    activations. They could then set a ``Policy`` with the ``policy_type``
    ``restore_default`` on several experimental projects, restoring the
    ``constraint_default`` enforcement of the ``Constraint`` for only those
    projects, allowing those projects to have all services activated.
    """,
                # @@protoc_insertion_point(class_scope:google.cloud.orgpolicy.v1.Policy.RestoreDefault)
            },
        ),
        "DESCRIPTOR": _POLICY,
        "__module__": "google.cloud.orgpolicy_v1.proto.orgpolicy_pb2",
        "__doc__": """Defines a Cloud Organization ``Policy`` which is used to
  specify ``Constraints`` for configurations of Cloud Platform resources.
  
  
  Attributes:
      version:
          Version of the ``Policy``. Default version is 0;
      constraint:
          The name of the ``Constraint`` the ``Policy`` is configuring,
          for example, ``constraints/serviceuser.services``.  Immutable
          after creation.
      etag:
          An opaque tag indicating the current version of the
          ``Policy``, used for concurrency control.  When the ``Policy``
          is returned from either a ``GetPolicy`` or a ``ListOrgPolicy``
          request, this ``etag`` indicates the version of the current
          ``Policy`` to use when executing a read-modify-write loop.
          When the ``Policy`` is returned from a ``GetEffectivePolicy``
          request, the ``etag`` will be unset.  When the ``Policy`` is
          used in a ``SetOrgPolicy`` method, use the ``etag`` value that
          was returned from a ``GetOrgPolicy`` request as part of a
          read-modify-write loop for concurrency control. Not setting
          the ``etag``\ in a ``SetOrgPolicy`` request will result in an
          unconditional write of the ``Policy``.
      update_time:
          The time stamp the ``Policy`` was previously updated. This is
          set by the server, not specified by the caller, and represents
          the last time a call to ``SetOrgPolicy`` was made for that
          ``Policy``. Any value set by the client will be ignored.
      policy_type:
          The field to populate is based on the ``constraint_type``
          value in the ``Constraint``. ``list_constraint`` =>
          ``list_policy`` ``boolean_constraint`` => ``boolean_policy``
          A ``restore_default`` message may be used with any
          ``Constraint`` type.  Providing a \*_policy that is
          incompatible with the ``constraint_type`` will result in an
          ``invalid_argument`` error.  Attempting to set a ``Policy``
          with a ``policy_type`` not set will result in an
          ``invalid_argument`` error.
      list_policy:
          List of values either allowed or disallowed.
      boolean_policy:
          For boolean ``Constraints``, whether to enforce the
          ``Constraint`` or not.
      restore_default:
          Restores the default behavior of the constraint; independent
          of ``Constraint`` type.
  """,
        # @@protoc_insertion_point(class_scope:google.cloud.orgpolicy.v1.Policy)
    },
)
_sym_db.RegisterMessage(Policy)
_sym_db.RegisterMessage(Policy.ListPolicy)
_sym_db.RegisterMessage(Policy.BooleanPolicy)
_sym_db.RegisterMessage(Policy.RestoreDefault)


DESCRIPTOR._options = None
# @@protoc_insertion_point(module_scope)
