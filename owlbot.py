# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
import os
import shutil
import subprocess


import synthtool as s
import synthtool.gcp as gcp
from synthtool.languages import python
from synthtool.sources import git

GOOGLEAPIS_REPO = "googleapis/googleapis"

common = gcp.CommonTemplates()

default_version = "v2"

for library in s.get_staging_dirs(default_version):
    # Rename to google-cloud-org-policy
    # TODO: use bazel option to rename package
    s.replace(
        library / "google/cloud/**/*",
        "google-cloud-orgpolicy",
        "google-cloud-org-policy"
    )

    s.move(library, excludes=["setup.py", "README.rst", "docs/index.rst", "noxfile.py"])

s.remove_staging_dirs()

# Clean up googleapis
shutil.rmtree('googleapis', ignore_errors=True)

# Clone googleapis
googleapis_url = git.make_repo_clone_url(GOOGLEAPIS_REPO)
subprocess.run(["git", "clone", googleapis_url])

# This is required in order for s.copy() to work
s._tracked_paths.add("googleapis")

os.makedirs("google/api", exist_ok=True)

s.copy("googleapis/google/api/annotations.proto", "google/api")
s.copy("googleapis/google/api/http.proto", "google/api")

# Clean up googleapis
shutil.rmtree('googleapis')

# ----------------------------------------------------------------------------
#  Add templated files
# ----------------------------------------------------------------------------

# coverage is 97 to exclude orgpolicy/v1 code
templated_files = common.py_library(microgenerator=True, cov_level=97)

s.move(
    templated_files, excludes=[".coveragerc", "noxfile.py"]
)

python.py_samples(skip_readmes=True)

python.configure_previous_major_version_branches()

# Generate _pb2.py files and format them
s.shell.run(["nox", "-s", "generate_protos"], hide_output=False)

# Clean up google/api
shutil.rmtree('google/api')

s.shell.run(["nox", "-s", "blacken"], hide_output=False)

# Add license headers
python.fix_pb2_headers()

LICENSE = """
# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License."""

PB2_GRPC_HEADER = r"""(\# Generated by the gRPC Python protocol compiler plugin\. DO NOT EDIT!$)
(.*?$)"""

s.replace(
    "**/*_pb2_grpc.py",
    PB2_GRPC_HEADER,
    fr"{LICENSE}\n\n\g<1>\n\n\g<2>",  # add line breaks to avoid stacking replacements
)
